<?php

namespace PersonnelBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ExServicemanRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ExServicemanRepository extends EntityRepository
{
    public function getExServicemanData($data)
    {
        if(!empty($data)) {
            $query= $this->createQueryBuilder('ex');

            if (!empty($data['corp'])) {
                $query->join('ex.corp', 'c');
                $query->andWhere('c.id = :corp');
                $query->setParameter('corp', $data['corp']);
            }

            if (!empty($data['office'])) {
                $query->join('ex.office', 'office');
                $query->andWhere('office.id = :office');
                $query->setParameter('office', $data['office']);
            }

            if (!empty($data['trade'])) {
                $query->andWhere('ex.trade = :trade');
                $query->setParameter('trade', $data['trade']);
            }

            if (!empty($data['reEmployment'])) {
                $query->andWhere('ex.reEmployment = :reEmployment');
                $query->setParameter('reEmployment', $data['reEmployment']);
            }

            if (!empty($data['rank'])) {
                $query->join('ex.rank', 'r');
                $query->andWhere('r.id = :rank');
                $query->setParameter('rank', $data['rank']);
            }

            if (!empty($data['permanentDistrict'])) {
                $query->join('ex.permanentDistrict', 'permanentDistrict');
                $query->andWhere('permanentDistrict.id = :permanentDistrict');
                $query->setParameter('permanentDistrict', $data['permanentDistrict']);
            }

            if (!empty($data['permanentDistrict']) and !empty($data['permanentUpazila'])) {
                $query->join('ex.permanentUpazila', 'permanentUpazila');
                $query->andWhere('permanentUpazila.id = :permanentUpazila');
                $query->setParameter('permanentUpazila', $data['permanentUpazila']);
            }

            if (!empty($data['service'])) {
                $query->join('ex.service', 's');
                $query->andWhere('s.id = :service');
                $query->setParameter('service', $data['service']);
            }

            if (!empty($data['regimentalNumber'])) {
                $query->andWhere('ex.regimentalNumber = :regimentalNumber');
                $query->setParameter('regimentalNumber', $data['regimentalNumber']);
            }

            if (!empty($data['religion'])) {
                $query->andWhere('ex.religion = :religion');
                $query->setParameter('religion', $data['religion']);
            }

            if (!empty($data['gender'])) {
                $query->andWhere('ex.gender = :gender');
                $query->setParameter('gender', $data['gender']);
            }

            if (!empty($data['identityNumber'])) {
                $query->andWhere('ex.identityNumber = :identityNumber');
                $query->setParameter('identityNumber', $data['identityNumber']);
            }

            if (!empty($data['tsNumber'])) {
                $query->andWhere('ex.tsNumber = :tsNumber');
                $query->setParameter('tsNumber', $data['tsNumber']);
            }

            if (!empty($data['freedomFighter'])) {
                $query->andWhere('ex.freedomFighter = :freedomFighter');
                $query->setParameter('freedomFighter', $data['freedomFighter']);
            }

            if (!empty($data['exFromDate'])) {
                $query->andWhere("ex.retirementDate >= :exFromDate");
                $query->setParameter('exFromDate', $data['exFromDate'] . ' 00:00:00');
            }

            if (!empty($data['exToDate'])) {
                $query->andWhere("ex.retirementDate <= :exToDate");
                $query->setParameter('exToDate', $data['exToDate'] . ' 23:59:59');
            }

            if (!empty($data['deceasedFromDate'])) {
                $query->andWhere("ex.deceased = 1");
                $query->andWhere("ex.deceasedDate >= :deceasedFromDate");
                $query->setParameter('deceasedFromDate', $data['deceasedFromDate'] . ' 00:00:00');
            }

            if (!empty($data['deceasedToDate'])) {
                $query->andWhere("ex.deceased = 1");
                $query->andWhere("ex.deceasedDate <= :deceasedToDate");
                $query->setParameter('deceasedToDate', $data['deceasedToDate'] . ' 23:59:59');
            }

            return $query->getQuery()->getResult();
        } else {
            return null;
        }
    }

    public function personalNo()
    {
        $query = $this->createQueryBuilder('p');
        $query->select('p.identityNumber as value');
        $result = $query->getQuery()->getResult();

        return $result;
    }
}
