<?php

namespace PersonnelBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ServingMilitaryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ServingMilitaryRepository extends EntityRepository
{
    public function getServingMilitaryData($data)
    {
        if(!empty($data)) {
            $query= $this->createQueryBuilder('ex');
            $query->join('ex.militaryProfile', 'mp');

            if (!empty($data['corp'])) {
                $query->join('mp.corp', 'c');
                $query->andWhere('c.id = :corp');
                $query->setParameter('corp', $data['corp']);
            }

            if (!empty($data['rank'])) {
                $query->join('mp.rank', 'r');
                $query->andWhere('r.id = :rank');
                $query->setParameter('rank', $data['rank']);
            }

            if (!empty($data['service'])) {
                $query->join('mp.service', 's');
                $query->andWhere('s.id = :service');
                $query->setParameter('service', $data['service']);
            }

            if (!empty($data['religion'])) {
                $query->andWhere('ex.religion = :religion');
                $query->setParameter('religion', $data['religion']);
            }

            if (!empty($data['gender'])) {
                $query->andWhere('ex.gender = :gender');
                $query->setParameter('gender', $data['gender']);
            }

            if (!empty($data['identityNumber'])) {
                $query->andWhere('ex.identityNumber = :identityNumber');
                $query->setParameter('identityNumber', $data['identityNumber']);
            }

            if (!empty($data['office'])) {
                $query->join('ex.office', 'o');
                $query->andWhere('o.id = :office');
                $query->setParameter('office', $data['office']);
            }

            return $query->getQuery()->getResult();
        } else {
            return null;
        }
    }

    public function personalNo()
    {
        $query = $this->createQueryBuilder('p');
        $query->select('p.identityNumber as value');
        $result = $query->getQuery()->getResult();

        return $result;
    }
}
