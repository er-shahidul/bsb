<?php

namespace NotificationBundle\Repository;

use NotificationBundle\Entity\NotificationRecipient;
use UserBundle\Entity\User;

/**
 * NotificationRecipientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotificationRecipientRepository extends \Doctrine\ORM\EntityRepository
{
    public function update(NotificationRecipient $recipient) {
        $this->_em->flush($recipient);
    }

    public function findNotificationsByUser(User $user) {
        return $this->findBy(['user' => $user]);
    }

    public function findNewNotificationsByUser(User $user) {
        $qb = $this->createQueryBuilder('nr');
        $qb
            ->join('nr.notification', 'notification')
            ->where($qb->expr()->eq('nr.user', ':user'))
            ->andWhere($qb->expr()->eq('nr.seen', ':seen'))
            ->orderBy('notification.date', 'DESC')
            ->setParameter('user', $user)
            ->setParameter('seen', false)
        ;
        return $qb->getQuery()->getResult();
    }

    public function countUserNotification($userId)
    {
        $qb = $this->createQueryBuilder('nr');

        return $qb
            ->select('COUNT(nr) AS nCount')
            ->where('nr.user = :user')
            ->andWhere($qb->expr()->eq('nr.seen', ':seen'))
            ->setParameter('user', $userId)
            ->setParameter('seen', false)
            ->getQuery()->getSingleScalarResult();
    }
}
