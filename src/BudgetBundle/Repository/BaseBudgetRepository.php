<?php

namespace BudgetBundle\Repository;

use AppBundle\Entity\Office;
use AppBundle\Repository\BaseRepository;
use BudgetBundle\Entity\BaseBudget;
use BudgetBundle\Entity\BudgetHead;

/**
 * BudgetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BaseBudgetRepository extends BaseRepository
{
    public function getHeadTotal(BudgetHead $budgetHead, $financialYear = null, Office $office = null)
    {
        $qb = $this->createQueryBuilder('budget');
        $qb->select("budgetHead.id, SUM(bd.requestAmount) as requestAmount, SUM(bd.amount) amount");
        $qb->join('budget.budgetDetails', 'bd');
        $qb->join('budget.financialYear', 'financialYear');
        $qb->join('bd.budgetHead', 'budgetHead');

        $qb->where($qb->expr()->eq('budgetHead.id', ':budgetHead'));
        $qb->setParameter('budgetHead', $budgetHead);

        $qb->andWhere($qb->expr()->eq('budget.status', ':status'));
        $qb->setParameter('status', 'approved');

        if ($office) {
            $qb->andWhere($qb->expr()->eq('budget.office', ':office'));
            $qb->setParameter('office', $office);
        }
        if ($financialYear) {
            $qb->andWhere($qb->expr()->eq('financialYear.id', ':finanYear'));
            $qb->setParameter('finanYear', $financialYear);
        }

        $qb->groupBy('budgetHead.id');

        if ($row = $qb->getQuery()->getOneOrNullResult()) {
            return [
                'id' => $row['id'],
                'amount' => number_format($row['amount'], 2),
                'requestAmount' => number_format($row['requestAmount'], 2)
            ];
        }

        return ['requestAmount' => '0.00', 'amount' =>  '0.00'];
    }

    public function getAmounts($year, $status = null, Office $office = null)
    {
        $qb = $this->createQueryBuilder('bd');

        $qb->select("budgetHead.id as headId, bDetails.requestAmount as requestAmount, bDetails.amount as amount");
        $qb->join('bd.budgetDetails', 'bDetails');
        $qb->join('bDetails.budget', 'budget');
        $qb->join('bDetails.budgetHead', 'budgetHead');
        $qb->where($qb->expr()->eq('bd.financialYear', $year));

        if ($office) {
            $qb->andWhere($qb->expr()->eq('bd.office', ':office'));
            $qb->setParameter('office', $office);
        }

        if ($status) {
            $qb->andWhere("budget.{$status} = 'approved'");
        }

        $data = [];
        foreach ($qb->getQuery()->getResult() as $row) {
            $data[$row['headId']] = $row;
        }

        return $data;
    }

    public function getTotalAmountParentHeadWise($year, $status = null, Office $office = null)
    {
        $qb = $this->createQueryBuilder('bd');

        $qb->select("parent.id, SUM(bDetails.requestAmount) as requestAmount, SUM(bDetails.amount) amount");
        $qb->join('bd.budgetDetails', 'bDetails');
        $qb->join('bDetails.budget', 'budget');
        $qb->join('bDetails.budgetHead', 'budgetHead');
        $qb->join('budgetHead.parent', 'parent');
        $qb->where($qb->expr()->eq('bd.financialYear', $year));

        if ($office) {
            $qb->andWhere($qb->expr()->eq('bd.office', ':office'));
            $qb->setParameter('office', $office);
        }

        $qb->groupBy('parent.id');

        if ($status) {
            $qb->andWhere("budget.{$status} = 'approved'");
        }

        $data = [];
        foreach ($qb->getQuery()->getResult() as $row) {
            $data[$row['id']] = $row;
        }

        return $data;
    }

    public function getTotalAmountOfYear($year, $status = null, Office $office = null)
    {
        $qb = $this->createQueryBuilder('bd');

        $qb->select("SUM(bDetails.requestAmount) as requestAmount, SUM(bDetails.amount) amount");
        $qb->join('bd.budgetDetails', 'bDetails');
        $qb->join('bDetails.budget', 'budget');
        $qb->join('bDetails.budgetHead', 'budgetHead');
        $qb->join('budgetHead.parent', 'parent');
        $qb->where($qb->expr()->eq('bd.financialYear', $year));

        if ($office) {
            $qb->andWhere($qb->expr()->eq('bd.office', ':office'));
            $qb->setParameter('office', $office);
        }

        if ($status) {
            $qb->andWhere("budget.{$status} = 'approved'");
        }

        return $qb->getQuery()->getResult()[0];
    }
}
