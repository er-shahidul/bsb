<?php

namespace AccountBundle\Repository;

use AccountBundle\Entity\ReceiveVoucher;

/**
 * ReceiveVoucherRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReceiveVoucherRepository extends VoucherRepository
{
    /**
     * @param ReceiveVoucher $receiveVoucher
     */
    public function prepareAndSave($receiveVoucher)
    {
        $receiveVoucher->setYear(date('Y'));
        $receiveVoucher->prepareAmount();
        foreach ($receiveVoucher->getVoucherDetails() as $detail) {
            $detail->setVoucher($receiveVoucher);
        }
        $this->save($receiveVoucher);
    }

    public function receiveVoucherStats($fundType)
    {
        $qb = $this->createQueryBuilder('voucher');
        $qb->join('voucher.voucherDetails', 'vd');
        $qb->join('vd.fundHead', 'fundHead');
        $qb->where('voucher.fundType = :fundType')->setParameter('fundType', $fundType);
        $qb->andWhere('voucher.status = :status')->setParameter('status', 'approved');
        $qb->select('SUM(vd.amount) as amount, fundHead.id as fundHeadId, fundHead.name as fundName');
        $qb->groupBy('fundHead.id, fundHead.name');

        $data = [];
        foreach ($qb->getQuery()->getResult() as $row) {
            $data[$row['fundHeadId']] = (float)$row['amount'];
        }

        return $data;
    }
}
